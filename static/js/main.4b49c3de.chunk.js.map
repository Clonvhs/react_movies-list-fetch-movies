{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","movieName","a","fetch","response","ok","json","FindMovie","useState","searchText","setSearchText","searchError","setSearchError","film","setFilm","displayMovie","setDisplayMovie","loadMovie","result","Response","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","hideError","showError","onClick","find","setMovies","App","data","imgUrl","title","description","imdbId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b49c3de.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=b6b0e744&';\n\nexport const getMovie = async (movieName:string) => {\n  const response = await fetch(`${BASE_URL}&t=${movieName}`);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  return 'no data';\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  setMovies: (movies:Movie[]) => void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const [searchText, setSearchText] = useState('');\n  const [searchError, setSearchError] = useState(false);\n  const [film, setFilm] = useState({\n    Poster: '',\n    Title: '',\n    Plot: '',\n    imdbID: '',\n  });\n  const [displayMovie, setDisplayMovie] = useState(false);\n\n  const loadMovie = async (movieName: string) => {\n    const result = await getMovie(movieName);\n\n    if (result.Response === 'False') {\n      setSearchError(true);\n    } else {\n      setSearchError(false);\n\n      setFilm({\n        Poster: result.Poster,\n        Title: result.Title,\n        Plot: result.Plot,\n        imdbID: result.imdbID,\n      });\n      setDisplayMovie(true);\n    }\n  };\n\n  const addMovie = () => {\n    if (displayMovie && !props.movies.find(movie => movie.imdbID === film.imdbID)) {\n      props.setMovies([...props.movies, film]);\n      setDisplayMovie(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': searchError,\n              })}\n              value={searchText}\n              onChange={(event) => {\n                setSearchText(event.target.value);\n                setDisplayMovie(false);\n              }}\n            />\n          </div>\n\n          <p className={classNames(\n            'help',\n            {\n              hideError: !searchError,\n              showError: searchError,\n              'is-danger': searchError,\n            },\n          )}\n          >\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => loadMovie(searchText)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {displayMovie && <MovieCard movie={film} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App:React.FC = () => {\n  const [movies, setMovies] = useState([...data.map((movie) => ({\n    Poster: movie.imgUrl,\n    Title: movie.title,\n    Plot: movie.description,\n    imdbID: movie.imdbId,\n  }))]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}